CREATE TYPE public.user_type AS ENUM ('Customer', 'Seller');
-- Table structure for table Users
CREATE TABLE IF NOT EXISTS public.users (
    user_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    user_name CHAR(25) NOT NULL,
    user_email CHAR(50) NOT NULL,
    user_password CHAR(12) NOT NULL,
    user_type user_type NOT NULL DEFAULT 'Customer'::user_type,
    user_join_date DATE NOT NULL,
    user_profile_picture TEXT,
    user_bio TEXT,
    user_address VARCHAR(255) NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (user_id)
);
-- Table structure for table Products
CREATE TABLE IF NOT EXISTS public.products (
    product_id INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    user_id INTEGER NOT NULL,
    product_title CHAR(20) NOT NULL,
    product_description TEXT NOT NULL,
    product_price NUMERIC NOT NULL,
    product_stock_quantity NUMERIC NOT NULL,
    category_id INTEGER NOT NULL,
    product_created_date DATE NOT NULL,
    product_updated_date DATE DEFAULT NULL,
    product_image_url TEXT NOT NULL,
    CONSTRAINT products_pkey PRIMARY KEY (product_id)
);
-- Table structure for table Categories
CREATE TABLE IF NOT EXISTS public.categories (
    category_id INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    category_name CHAR(20) NOT NULL,
    category_description TEXT NOT NULL,
    CONSTRAINT categories_pkey PRIMARY KEY (category_id)
);
-- Table structure for table Orders
CREATE TABLE IF NOT EXISTS public.orders (
    order_id INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    user_id INTEGER NOT NULL,
    order_total_price NUMERIC NOT NULL,
    order_date DATE NOT NULL,
    shipping_address VARCHAR(255) NOT NULL,
    CONSTRAINT orders_pkey PRIMARY KEY (order_id)
);
-- Table structure for table Orders_items
CREATE TABLE IF NOT EXISTS public.order_items (
    order_item_id INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    order_id INTEGER NOT NULL,
    product_id INTEGER NOT NULL,
    order_item_quantity NUMERIC NOT NULL,
    order_item_price NUMERIC NOT NULL,
    CONSTRAINT order_item_pkey PRIMARY KEY (order_item_id)
);
-- Table structure for table Reviews
CREATE TABLE IF NOT EXISTS public.reviews (
    review_id INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    user_id INTEGER NOT NULL,
    product_id INTEGER NOT NULL,
    review_rating SMALLINT NOT NULL,
    review_comment TEXT(300) NOT NULL,
    review_created_date DATE NOT NULL,
    CONSTRAINT reviews_pkey PRIMARY KEY (review_id)
);
-- Table structure for table Payments
CREATE TABLE IF NOT EXISTS public.payments (
    payment_id INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    order_id INTEGER NOT NULL,
    payment_date DATE NOT NULL,
    payment_method CHAR(25) NOT NULL,
    payment_status CHAR(15) NOT NULL,
    CONSTRAINT payments_pkey PRIMARY KEY (payment_id)
);
-- Table structure for table Shopping_carts
CREATE TABLE IF NOT EXISTS public.shopping_carts (
    cart_id INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    user_id INTEGER NOT NULL,
    CONSTRAINT shopping_cart_pkey PRIMARY KEY (cart_id)
);
-- Table structure for table Cart_items
CREATE TABLE IF NOT EXISTS public.cart_items (
    cart_item_id INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    cart_id INTEGER NOT NULL,
    product_id INTEGER NOT NULL,
    cart_item_quantity INTEGER NOT NULL,
    cart_item_total_price INTEGER NOT NULL,
    CONSTRAINT cart_items_pkey PRIMARY KEY (cart_item_id)
);
-- Create relationship between 'products' and 'categories' tables
ALTER TABLE IF EXISTS public.products
ADD CONSTRAINT fk_category FOREIGN KEY(category_id) REFERENCES public.categories(category_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
-- Create relationship between 'order_items' and 'orders' tables
ALTER TABLE IF EXISTS public.order_items
ADD CONSTRAINT fk_order FOREIGN KEY(order_id) REFERENCES public.orders(orders_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
-- Create relationship between 'order_items' and 'products' tables
ALTER TABLE IF EXISTS public.order_items
ADD CONSTRAINT fk_product FOREIGN KEY(product_id) REFERENCES public.products(product_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
-- Create relationship between 'cart_items' and 'shopping_carts' tables
ALTER TABLE IF EXISTS public.cart_items
ADD CONSTRAINT fk_cart FOREIGN KEY(cart_id) REFERENCES public.shopping_carts(cart_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
-- Create relationship between 'cart_items' and 'products' tables
ALTER TABLE IF EXISTS public.cart_items
ADD CONSTRAINT fk_product FOREIGN KEY(product_id) REFERENCES public.products(product_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
-- Create relationship between 'payments' and 'orders' tables
ALTER TABLE IF EXISTS public.payments
ADD CONSTRAINT fk_order FOREIGN KEY(order_id) REFERENCES public.orders(order_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
-- Create relationship between 'reviews' and 'products' tables
ALTER TABLE IF EXISTS public.reviews
ADD CONSTRAINT fk_product FOREIGN KEY(product_id) REFERENCES public.products(product_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
-- Create relationship between 'orders' and 'users' tables
ALTER TABLE IF EXISTS public.orders
ADD CONSTRAINT fk_user FOREIGN KEY(user_id) REFERENCES public.users(user_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
-- Create relationship between 'products' and 'users' tables
ALTER TABLE IF EXISTS public.products
ADD CONSTRAINT fk_user FOREIGN KEY(user_id) REFERENCES public.users(user_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
-- Create relationship between 'shopping_carts' and 'users' tables
ALTER TABLE IF EXISTS public.shopping_carts
ADD CONSTRAINT fk_user FOREIGN KEY(user_id) REFERENCES public.users(user_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
-- DATA POPULATION FOR DB
-- Data for table 'categories'
INSERT INTO public.categories (category_name, category_description)
VALUES (
        'Furniture',
        'Handcrafted furniture pieces made from high-quality materials, designed to enhance any living space.'
    ),
    (
        'Pottery',
        'Unique pottery items, including bowls, vases, and mugs, made using traditional techniques.'
    ),
    (
        'Textiles',
        'Handmade textiles such as blankets, pillows, and table runners, featuring vibrant patterns and textures.'
    ),
    (
        'Jewelry',
        'Artisan jewelry crafted by skilled hands, including necklaces, bracelets, and earrings.'
    ),
    (
        'Home Decor',
        'A variety of handcrafted decor items to personalize your home, from wall art to decorative accents.'
    ),
    (
        'Candles',
        'Scented and decorative candles made from natural ingredients, perfect for creating a cozy atmosphere.'
    ),
    (
        'Stationery',
        'Handcrafted stationery products, including greeting cards, journals, and planners, designed with creativity in mind.'
    );
-- ************************ WARNING, DATA PUPULATION FOR PRODUCTS IS NOT CORRECT, REVIEW BEFORE EXECUTE CODE BELOW *****************************
-- Data for table 'products'
INSERT INTO public.products (
        user_id,
        product_title,
        product_description,
        product_price,
        product_stock_quantity,
        category_id,
        product_created_date,
        product_updated_date,
        product_image_url
    )
VALUES (
        1,
        'Rustic Oak Table',
        'A handcrafted rustic oak dining table that seats six. Perfect for family gatherings.',
        799.99,
        10,
        1,
        '2024-01-15',
        NULL,
        'images/products/rustic_oak_table.jpg'
    ),
    (
        2,
        'Ceramic Flower Vase',
        'Unique handmade ceramic vase with a beautiful glaze, perfect for fresh flowers.',
        35.50,
        25,
        2,
        '2024-02-05',
        NULL,
        'images/products/ceramic_flower_vase.jpg'
    ),
    (
        3,
        'Handwoven Throw',
        'Soft and cozy throw blanket, handwoven with natural fibers.',
        45.00,
        15,
        3,
        '2024-03-10',
        NULL,
        'images/products/handwoven_throw.jpg'
    ),
    (
        4,
        'Beaded Necklace',
        'A stunning beaded necklace handcrafted with semi-precious stones.',
        25.00,
        50,
        4,
        '2024-04-12',
        NULL,
        'images/products/beaded_necklace.jpg'
    ),
    (
        5,
        'Boho Wall Art',
        'Handcrafted wall art featuring a bohemian design, perfect for adding character to any room.',
        60.00,
        20,
        5,
        '2024-05-15',
        NULL,
        'images/products/boho_wall_art.jpg'
    ),
    (
        6,
        'Soy Wax Candle',
        'A natural soy wax candle with a calming lavender scent, ideal for relaxation.',
        20.00,
        30,
        6,
        '2024-06-20',
        NULL,
        'images/products/lavender_candle.jpg'
    ),
    (
        7,
        'Handcrafted Journal',
        'A beautifully crafted leather journal, perfect for writing and sketching.',
        18.99,
        40,
        7,
        '2024-07-25',
        NULL,
        'images/products/handcrafted_journal.jpg'
    );