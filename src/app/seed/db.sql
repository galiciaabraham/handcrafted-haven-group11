CREATE TYPE public.user_type AS ENUM ('Customer', 'Seller');
-- Table structure for table Users
CREATE TABLE IF NOT EXISTS public.users (
    user_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    user_name CHAR(25) NOT NULL,
    user_email CHAR(50) NOT NULL,
    user_password CHAR(12) NOT NULL,
    user_type user_type NOT NULL DEFAULT 'Customer'::user_type,
    user_join_date DATE NOT NULL,
    user_profile_picture TEXT,
    user_bio TEXT,
    user_address VARCHAR(255) NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (user_id)
);
-- Table structure for table Products
CREATE TABLE IF NOT EXISTS public.products (
    product_id INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    user_id INTEGER NOT NULL,
    product_title CHAR(20) NOT NULL,
    product_description TEXT NOT NULL,
    product_price NUMERIC NOT NULL,
    product_stock_quantity NUMERIC NOT NULL,
    category_id INTEGER NOT NULL,
    product_created_date DATE NOT NULL,
    product_updated_date DATE DEFAULT NULL,
    product_image_url TEXT NOT NULL,
    CONSTRAINT products_pkey PRIMARY KEY (product_id)
);
-- Table structure for table Categories
CREATE TABLE IF NOT EXISTS public.categories (
    category_id INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    category_name CHAR(20) NOT NULL,
    category_description TEXT NOT NULL,
    CONSTRAINT categories_pkey PRIMARY KEY (category_id)
);
-- Table structure for table Orders
CREATE TABLE IF NOT EXISTS public.orders (
    order_id INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    user_id INTEGER NOT NULL,
    order_date DATE NOT NULL,
    shipping_address VARCHAR(255) NOT NULL,
    CONSTRAINT orders_pkey PRIMARY KEY (order_id)
);
-- Table structure for table Orders_items
CREATE TABLE IF NOT EXISTS public.order_items (
    order_item_id INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    order_id INTEGER NOT NULL,
    product_id INTEGER NOT NULL,
    order_item_quantity NUMERIC NOT NULL,
    order_item_price NUMERIC NOT NULL,
    CONSTRAINT order_item_pkey PRIMARY KEY (order_item_id)
);
-- Table structure for table Reviews
CREATE TABLE IF NOT EXISTS public.reviews (
    review_id INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    user_id INTEGER NOT NULL,
    product_id INTEGER NOT NULL,
    review_rating SMALLINT NOT NULL,
    review_comment TEXT NOT NULL,
    review_created_date DATE NOT NULL,
    CONSTRAINT reviews_pkey PRIMARY KEY (review_id)
);
-- Table structure for table Payments
CREATE TABLE IF NOT EXISTS public.payments (
    payment_id INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    order_id INTEGER NOT NULL,
    payment_date DATE NOT NULL,
    payment_method CHAR(25) NOT NULL,
    payment_status CHAR(15) NOT NULL,
    CONSTRAINT payments_pkey PRIMARY KEY (payment_id)
);
-- Table structure for table Shopping_carts
CREATE TABLE IF NOT EXISTS public.shopping_carts (
    cart_id INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    user_id INTEGER NOT NULL,
    CONSTRAINT shopping_cart_pkey PRIMARY KEY (cart_id)
);
-- Table structure for table Cart_items
CREATE TABLE IF NOT EXISTS public.cart_items (
    cart_item_id INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    cart_id INTEGER NOT NULL,
    product_id INTEGER NOT NULL,
    cart_item_quantity INTEGER NOT NULL,
    cart_item_total_price INTEGER NOT NULL,
    CONSTRAINT cart_items_pkey PRIMARY KEY (cart_item_id)
);
CREATE TABLE public.posts (
    post_id INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    user_id INTEGER NOT NULL,
    post_title VARCHAR(255) NOT NULL,
    post_content TEXT NOT NULL,
    post_create_at DATE NOT NULL,
    post_updated_at DATE DEFAULT NULL,
    post_likes_count INTEGER DEFAULT 0,
    CONSTRAINT post_pkey PRIMARY KEY (post_id)
);
-- Create relationship between 'products' and 'categories' tables
ALTER TABLE IF EXISTS public.products
ADD CONSTRAINT fk_category FOREIGN KEY(category_id) REFERENCES public.categories(category_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
-- Create relationship between 'order_items' and 'orders' tables
ALTER TABLE IF EXISTS public.order_items
ADD CONSTRAINT fk_order FOREIGN KEY(order_id) REFERENCES public.orders(order_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
-- Create relationship between 'order_items' and 'products' tables
ALTER TABLE IF EXISTS public.order_items
ADD CONSTRAINT fk_product FOREIGN KEY(product_id) REFERENCES public.products(product_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
-- Create relationship between 'cart_items' and 'shopping_carts' tables
ALTER TABLE IF EXISTS public.cart_items
ADD CONSTRAINT fk_cart FOREIGN KEY(cart_id) REFERENCES public.shopping_carts(cart_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
-- Create relationship between 'cart_items' and 'products' tables
ALTER TABLE IF EXISTS public.cart_items
ADD CONSTRAINT fk_product FOREIGN KEY(product_id) REFERENCES public.products(product_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
-- Create relationship between 'payments' and 'orders' tables
ALTER TABLE IF EXISTS public.payments
ADD CONSTRAINT fk_order FOREIGN KEY(order_id) REFERENCES public.orders(order_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
-- Create relationship between 'reviews' and 'products' tables
ALTER TABLE IF EXISTS public.reviews
ADD CONSTRAINT fk_product FOREIGN KEY(product_id) REFERENCES public.products(product_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
-- Create relationship between 'orders' and 'users' tables
ALTER TABLE IF EXISTS public.orders
ADD CONSTRAINT fk_user FOREIGN KEY(user_id) REFERENCES public.users(user_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
-- Create relationship between 'products' and 'users' tables
ALTER TABLE IF EXISTS public.products
ADD CONSTRAINT fk_user FOREIGN KEY(user_id) REFERENCES public.users(user_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
-- Create relationship between 'shopping_carts' and 'users' tables
ALTER TABLE IF EXISTS public.shopping_carts
ADD CONSTRAINT fk_user FOREIGN KEY(user_id) REFERENCES public.users(user_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
-- Create relationship between 'posts' and 'users' tables
ALTER TABLE IF EXISTS public.posts
ADD CONSTRAINT fk_user FOREIGN KEY(user_id) REFERENCES public.users(user_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE;
-- DATA POPULATION FOR DB
-- Data for table 'categories'
INSERT INTO public.categories (category_name, category_description)
VALUES (
        'Furniture',
        'Handcrafted furniture pieces made from high-quality materials, designed to enhance any living space.'
    ),
    (
        'Pottery',
        'Unique pottery items, including bowls, vases, and mugs, made using traditional techniques.'
    ),
    (
        'Textiles',
        'Handmade textiles such as blankets, pillows, and table runners, featuring vibrant patterns and textures.'
    ),
    (
        'Jewelry',
        'Artisan jewelry crafted by skilled hands, including necklaces, bracelets, and earrings.'
    ),
    (
        'Home Decor',
        'A variety of handcrafted decor items to personalize your home, from wall art to decorative accents.'
    ),
    (
        'Candles',
        'Scented and decorative candles made from natural ingredients, perfect for creating a cozy atmosphere.'
    ),
    (
        'Stationery',
        'Handcrafted stationery products, including greeting cards, journals, and planners, designed with creativity in mind.'
    );
-- Data for table 'users'
INSERT INTO public.users (
        user_name,
        user_email,
        user_password,
        user_type,
        user_join_date,
        user_profile_picture,
        user_bio,
        user_address
    )
VALUES -- User 1: A Customer
    (
        'John Doe',
        'johndoe@example.com',
        'password123',
        'Customer',
        '2023-10-01',
        'images/profiles/john.jpg',
        'Avid buyer of handmade pottery.',
        '123 Maple St, Springfield, IL'
    ),
    -- User 2: A Seller
    (
        'Jane Smith',
        'janesmith@example.com',
        'password456',
        'Seller',
        '2023-09-15',
        'images/profiles/jane.jpg',
        'Crafting unique wooden furniture.',
        '456 Elm St, Portland, OR'
    ),
    -- User 3: A Customer
    (
        'Alice Jones',
        'alicejones@example.com',
        'password789',
        'Customer',
        '2023-07-20',
        NULL,
        'Loves shopping for artisan jewelry.',
        '789 Pine St, Austin, TX'
    ),
    -- User 4: A Seller
    (
        'Bob Crafts',
        'bobcrafts@example.com',
        'passwordabc',
        'Seller',
        '2023-08-10',
        'images/profiles/bob.jpg',
        'Experienced potter and ceramic artist.',
        '321 Oak St, Boulder, CO'
    ),
    -- User 5: A Customer
    (
        'Charlie Brown',
        'charlieb@example.com',
        'passwordxyz',
        'Customer',
        '2023-06-05',
        NULL,
        'Collector of hand-carved sculptures.',
        '555 Cedar St, San Diego, CA'
    ),
    -- User 6: A Seller
    (
        'Laura Handmade',
        'laura@example.com',
        'passworddef',
        'Seller',
        '2023-05-22',
        'images/profiles/laura.jpg',
        'Selling handmade clothing and textiles.',
        '901 Birch St, Seattle, WA'
    ),
    -- User 7: A Customer
    (
        'David Green',
        'davidg@example.com',
        'passwordghi',
        'Customer',
        '2023-09-10',
        'images/profiles/david.jpg',
        'Supporter of eco-friendly crafts.',
        '234 Redwood St, Denver, CO'
    );
-- ************************ WARNING, INSERT DATA ONE TABLE AT A TIME *****************************
-- Data for table 'products'
INSERT INTO public.products (
        user_id,
        product_title,
        product_description,
        product_price,
        product_stock_quantity,
        category_id,
        product_created_date,
        product_updated_date,
        product_image_url
    )
VALUES (
        2,
        'Rustic Oak Table',
        'A handcrafted rustic oak dining table that seats six. Perfect for family gatherings.',
        799.99,
        10,
        1,
        '2024-01-15',
        NULL,
        'images/products/rustic_oak_table.jpg'
    ),
    (
        2,
        'Ceramic Flower Vase',
        'Unique handmade ceramic vase with a beautiful glaze, perfect for fresh flowers.',
        35.50,
        25,
        2,
        '2024-02-05',
        NULL,
        'images/products/ceramic_flower_vase.jpg'
    ),
    (
        4,
        'Handwoven Throw',
        'Soft and cozy throw blanket, handwoven with natural fibers.',
        45.00,
        15,
        3,
        '2024-03-10',
        NULL,
        'images/products/handwoven_throw.jpg'
    ),
    (
        4,
        'Beaded Necklace',
        'A stunning beaded necklace handcrafted with semi-precious stones.',
        25.00,
        50,
        4,
        '2024-04-12',
        NULL,
        'images/products/beaded_necklace.jpg'
    ),
    (
        6,
        'Boho Wall Art',
        'Handcrafted wall art featuring a bohemian design, perfect for adding character to any room.',
        60.00,
        20,
        5,
        '2024-05-15',
        NULL,
        'images/products/boho_wall_art.jpg'
    ),
    (
        6,
        'Soy Wax Candle',
        'A natural soy wax candle with a calming lavender scent, ideal for relaxation.',
        20.00,
        30,
        6,
        '2024-06-20',
        NULL,
        'images/products/lavender_candle.jpg'
    ),
    (
        6,
        'Handcrafted Journal',
        'A beautifully crafted leather journal, perfect for writing and sketching.',
        18.99,
        40,
        7,
        '2024-07-25',
        NULL,
        'images/products/handcrafted_journal.jpg'
    );
-- Insert sample data for table 'orders'
INSERT INTO public.orders (
        user_id,
        order_date,
        shipping_address
    )
VALUES -- Order 1: Placed by user_id 1 (Customer)
    (
        1,
        '2024-09-15',
        '123 Maple St, Springfield, IL'
    ),
    -- Order 2: Placed by user_id 3 (Customer)
    (
        3,
        '2024-10-01',
        '789 Pine St, Austin, TX'
    ),
    -- Order 3: Placed by user_id 5 (Customer)
    (
        5,
        '2024-09-20',
        '555 Cedar St, San Diego, CA'
    ),
    -- Order 4: Placed by user_id 7 (Customer)
    (
        7,
        '2024-09-25',
        '234 Redwood St, Denver, CO'
    ),
    -- Order 5: Placed by user_id 1 (Customer)
    (
        1,
        '2024-10-05',
        '123 Maple St, Springfield, IL'
    ),
    -- Order 6: Placed by user_id 3 (Customer)
    (
        3,
        '2024-09-18',
        '789 Pine St, Austin, TX'
    ),
    -- Order 7: Placed by user_id 5 (Customer)
    (
        5,
        '2024-09-30',
        '555 Cedar St, San Diego, CA'
    );
-- Insert sample data for table 'payments'
INSERT INTO public.payments (
        order_id,
        payment_date,
        payment_method,
        payment_status
    )
VALUES -- Payment 1: Linked to order_id 1
    (1, '2024-09-15', 'Credit Card', 'Completed'),
    -- Payment 2: Linked to order_id 2
    (2, '2024-10-01', 'PayPal', 'Completed'),
    -- Payment 3: Linked to order_id 3
    (3, '2024-09-21', 'Credit Card', 'Completed'),
    -- Payment 4: Linked to order_id 4
    (4, '2024-09-26', 'Bank Transfer', 'Pending'),
    -- Payment 5: Linked to order_id 5
    (5, '2024-10-06', 'Credit Card', 'Completed'),
    -- Payment 6: Linked to order_id 6
    (6, '2024-09-19', 'PayPal', 'Completed'),
    -- Payment 7: Linked to order_id 7
    (7, '2024-10-01', 'Credit Card', 'Pending');
-- Insert sample data for table 'order_items'
INSERT INTO public.order_items (
        order_id,
        product_id,
        order_item_quantity,
        order_item_price
    )
VALUES -- Order Item 1: Linked to order_id 1, product_id 1 
    (1, 1, 2, 799.99),
    -- Order Item 2: Linked to order_id 1, product_id 3 
    (1, 3, 1, 45.00),
    -- Order Item 3: Linked to order_id 2, product_id 2 
    (2, 2, 1, 85.00),
    -- Order Item 4: Linked to order_id 3, product_id 4 
    (3, 4, 2, 12.50),
    -- Order Item 5: Linked to order_id 4, product_id 5 
    (4, 5, 3, 22.25),
    -- Order Item 6: Linked to order_id 5, product_id 6 
    (5, 6, 1, 150.00),
    -- Order Item 7: Linked to order_id 6, product_id 2 
    (6, 2, 2, 85.00),
    -- Order Item 8: Linked to order_id 7, product_id 3 
    (7, 3, 1, 65.00),
    -- Order Item 9: Linked to order_id 5, product_id 4 
    (2, 4, 4, 9.37),
    -- Order Item 10: Linked to order_id 6, product_id 1 
    (3, 1, 3, 799.99);
-- Insert sample data for table 'reviews'
INSERT INTO public.reviews (
        user_id,
        product_id,
        review_rating,
        review_comment,
        review_created_date
    )
VALUES -- Review 1: Product ID 1 (Handcrafted Wooden Table)
    (
        1,
        1,
        5,
        'This wooden table is stunning! It fits perfectly in my dining area.',
        '2024-10-01'
    ),
    -- Review 2: Product ID 2 (Handcrafted Ceramic Mug)
    (
        2,
        2,
        4,
        'The mug is beautiful and comfortable to hold, but a bit smaller than expected.',
        '2024-10-02'
    ),
    -- Review 3: Product ID 3 (Handwoven Throw Blanket)
    (
        3,
        3,
        5,
        'The blanket is so soft and warm. Perfect for chilly nights!',
        '2024-10-03'
    ),
    -- Review 4: Product ID 4 (Artisan Silver Necklace)
    (
        1,
        4,
        5,
        'Absolutely love this necklace! It goes with everything.',
        '2024-10-04'
    ),
    -- Review 5: Product ID 5 (Decorative Wall Art)
    (
        2,
        5,
        4,
        'Great quality wall art! It adds a nice touch to my living room.',
        '2024-10-05'
    ),
    -- Review 6: Product ID 6 (Scented Soy Candle)
    (
        3,
        6,
        5,
        'This candle smells amazing! I will definitely be buying more.',
        '2024-10-06'
    ),
    -- Review 7: Product ID 7 (Handmade Greeting Card Set)
    (
        1,
        7,
        3,
        'The cards are cute, but I expected more variety in the designs.',
        '2024-10-07'
    );
-- Insert sample data for table 'shopping_carts'
INSERT INTO public.shopping_carts (user_id)
VALUES (1),
    (3),
    (7);
-- Insert sample data for table 'cart_items'
INSERT INTO public.cart_items (
        cart_id,
        product_id,
        cart_item_quantity,
        cart_item_total_price
    )
VALUES (1, 1, 1, 799.99),
    -- Handcrafted Lantern
    (1, 2, 2, 699.98),
    -- Decorative Wooden Chair x 2
    (2, 3, 3, 149.97),
    -- Unique Pottery Vase x 3
    (2, 4, 1, 89.99),
    -- Handwoven Blanket
    (3, 5, 1, 149.99),
    -- Artisan Silver Necklace
    (3, 6, 4, 119.96),
    -- Scented Candle Set x 4
    (1, 6, 2, 39.98),
    -- Handmade Journal x 2
    (2, 1, 1, 14.99);
-- Set of Greeting Cards
-- Sample Post 1
INSERT INTO public.posts (
        user_id,
        post_title,
        post_content,
        post_create_at
    )
VALUES (
        2,
        'The Beauty of Handcrafted Art',
        'Exploring the unique beauty of handcrafted goods and the artisans who create them.',
        '2024-10-16'
    );
-- Sample Post 2
INSERT INTO public.posts (
        user_id,
        post_title,
        post_content,
        post_create_at
    )
VALUES (
        2,
        'Top 10 Home Decor Ideas',
        'Here are the top 10 trending home decor ideas featuring handmade items.',
        '2024-10-15'
    );
-- Sample Post 3
INSERT INTO public.posts (
        user_id,
        post_title,
        post_content,
        post_create_at
    )
VALUES (
        4,
        'Why Buy Handmade?',
        'An in-depth look into the benefits of buying handmade products, including sustainability and supporting small businesses.',
        '2024-10-14'
    );
-- Sample Post 4
INSERT INTO public.posts (
        user_id,
        post_title,
        post_content,
        post_create_at
    )
VALUES (
        4,
        'Creating Handmade Pottery',
        'Learn how to get started in pottery making with these beginner tips and techniques.',
        '2024-10-13'
    );
-- Sample Post 5
INSERT INTO public.posts (
        user_id,
        post_title,
        post_content,
        post_create_at
    )
VALUES (
        6,
        'The Importance of Artisan Craftsmanship',
        'Discover why artisan craftsmanship is essential in preserving culture and traditions.',
        '2024-10-12'
    );